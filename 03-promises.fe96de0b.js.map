{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA2BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,KAlCM,CACXS,cAAeC,SAASC,iBAAiB,SACzCC,yBAA0BF,SAASG,cAAc,WAG9CD,yBAAyBE,iBAAiB,UAE/C,SAAkBC,GAChBA,EAAOC,iBACP,IAEgBC,EAAZC,MAAMC,OADRC,SAAYpB,EAAKiB,EAALjB,MAAOqB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAG3B,GAAIA,EAAOC,MAAQ,GAAKvB,EAAMuB,MAAQ,GAAKF,EAAKE,MAAQ,EAAG,CACzDC,QAAQC,IAAIJ,EAAKE,OACjB,IAAK,IAAIG,EAAI,EAAGA,EAAIJ,EAAOC,MAAOG,GAAK,EACrC5B,EAAc4B,EAAI,EAAGC,OAAO3B,EAAMuB,OAASI,OAAON,EAAKE,MAAQG,IAC5DE,MAAK,SAAAC,G,OAAUjC,EAAAkC,OAAOC,QAAQF,E,IAC9BG,OAAM,SAAAC,G,OAAarC,EAAAkC,OAAOI,QAAQD,E,SAGvCrC,EAAAkC,OAAOI,QAAQ,kB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  inputFromUser: document.querySelectorAll('input'),\n  formSendToPromiseCreadte: document.querySelector('.form'),\n};\n\nrefs.formSendToPromiseCreadte.addEventListener('submit', callback);\n\nfunction callback(evtent) {\n  evtent.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.target;\n\n  if (amount.value > 0 && delay.value > 0 && step.value > 0) {\n    console.log(step.value);\n    for (let i = 0; i < amount.value; i += 1) {\n      createPromise(i + 1, Number(delay.value) + Number(step.value * i))\n        .then(messOk => Notify.success(messOk))\n        .catch(messError => Notify.failure(messError));\n    }\n  } else {\n    Notify.failure('Enter value > 0');\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","inputFromUser","document","querySelectorAll","formSendToPromiseCreadte","querySelector","addEventListener","evtent","preventDefault","_elements","event","target","elements","step","amount","value","console","log","i","Number","then","messOk","Notify","success","catch","messError","failure"],"version":3,"file":"03-promises.fe96de0b.js.map"}